// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model Party {
  id            String         @id @default(cuid())
  name          String         @unique
  
  programs      Program[]
  searchResults SearchResult[]
}

model Program {
  id        String     @id @default(cuid())
  partyId   String
  party     Party      @relation(fields: [partyId], references: [id], onDelete: Cascade)
  
  fileName  String     @unique
  year      Int
  
  documents Document[]
  
  @@index([partyId])
}

model Document {
  id         String                 @id @default(cuid())
  content    String
  vector     Unsupported("vector")?
  
  programId  String
  program    Program                @relation(fields: [programId], references: [id], onDelete: Cascade)
  
  pageNumber Int
  
  @@index([programId])
}

model SearchResult {
  id        String     @id @default(cuid())
  query     String
  partyId   String
  party     Party      @relation(fields: [partyId], references: [id], onDelete: Cascade)
  
  positions Position[]
  
  createdAt DateTime   @default(now())
  
  @@unique([query, partyId])
  @@index([query])
  @@index([partyId])
}

model Position {
  id             String       @id @default(cuid())
  searchResultId String
  searchResult   SearchResult @relation(fields: [searchResultId], references: [id], onDelete: Cascade)
  
  title          String
  subtitle       String
  ordinal        Int
  
  quotes         Quote[]
  
  @@index([searchResultId])
}

model Quote {
  id         String   @id @default(cuid())
  positionId String
  position   Position @relation(fields: [positionId], references: [id], onDelete: Cascade)
  
  text       String
  page       Int
  ordinal    Int
  
  @@index([positionId])
}